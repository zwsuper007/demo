<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.model.mapper.SystemRoleMapper">
	
	<select id="query" parameterType="Role" resultType="Role">
	    select r.* from s_role r where r.state=1 <!-- and r.is_admin=0 --> and [s_role.r] order by r.create_time
	</select>
	
	<select id="checkName" resultType="java.lang.Integer" parameterType="Role">
    	select count(*) from s_role 
    	<where>
    		<if test="role_id != null">role_id <![CDATA[<>]]> #{role_id}</if> 
    	</where>
    	and role_name = #{role_name} and state=1 and [s_role.s_role]
    </select>
    
	<insert id="add" parameterType="Role" >
		insert into s_role
		<trim prefix="(" suffix=")" suffixOverrides="," >
		  <if test="role_id != null" >role_id,</if>
		  <if test="role_name != null" >role_name,</if>
		  <if test="is_admin != null" >is_admin,</if>
		  
		  <if test="createUser != null" >create_user,</if>
		  <if test="createTime != null" >create_time,</if>
		  <if test="updateUser != null" >update_user,</if>
		  <if test="updateTime != null" >update_time,</if>
		  <if test="state != null" >state,</if>
		  <if test="memo != null" >memo,</if>
		  <if test="belongDeptId != null" >belong_dept_id,</if>
		  <if test="belongLesseeId != null" >belong_lessee_id,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
		  <if test="role_id != null" >#{role_id},</if>
		  <if test="role_name != null" >#{role_name},</if>
		  <if test="is_admin != null" >#{is_admin},</if>
		  
		  <if test="createUser != null" >#{createUser},</if>
		  <if test="createTime != null" >#{createTime},</if>
		  <if test="updateUser != null" >#{updateUser},</if>
		  <if test="updateTime != null" >#{updateTime},</if>
		  <if test="state != null" >#{state},</if>
		  <if test="memo != null" >#{memo},</if>
		  <if test="belongDeptId != null" >#{belongDeptId},</if>
		  <if test="belongLesseeId != null" >#{belongLesseeId},</if>
		</trim>
	</insert>
	
	<select id="queryByID" resultType="Role" parameterType="java.lang.String">
    	select * from s_role where role_id = #{role_id} and state=1 and [s_role.s_role]
    </select>
    
    <update id="edit" parameterType="Role" >
	    update s_role
	    <set>
	      <if test="role_name != null" >role_name = #{role_name},</if>
	      <if test="memo != null" >memo = #{memo},</if>
	      <if test="updateUser != null" >update_user = #{updateUser},</if>
	      <if test="updateTime != null" >update_time = #{updateTime},</if>
	    </set>
	    where role_id = #{role_id}
	</update>
	
	<delete id="deleteAuthorityForRole" parameterType="java.lang.String" >
		delete from r_role_authority
		<where>
		role_id = #{role_id}
		</where>
	</delete>
	
	<insert id="addAuthorityForRole" parameterType="java.util.List">
	    INSERT INTO r_role_authority (role_id,auth_id)  
	    VALUES   
	    <foreach collection="list" item="item" index="index" separator="," >  
	        (#{role_id},#{item})  
	    </foreach>  
	</insert>
	
	<select id="getChooseAuthority" resultType="java.lang.String" parameterType="java.lang.String">
    	select auth_id from r_role_authority where role_id = #{role_id} ORDER BY auth_id ASC
    </select>
	
	<select id="checkDelete" resultType="java.lang.Integer" parameterType="java.lang.String">
    	select count(*) from r_user_role ur where ur.role_id =#{role_id} and [r_user_role.ur]
    </select>
	
	<update id="delete" parameterType="Role" >
	    update s_role
	    <set>
	      <if test="state != null" >state = #{state},</if>
	      <if test="updateUser != null" >update_user = #{updateUser},</if>
	      <if test="updateTime != null" >update_time = #{updateTime},</if>
	    </set>
	    where role_id = #{role_id}
	</update>
	
	<delete id="deleteAuthDataDept" parameterType="java.lang.String" >
		delete from r_auth_data_dept 
		where authorize_id = (select a.authorize_id from s_authorize a,s_role r where a.role_id=r.role_id and r.role_id=#{role_id})
	</delete>
	
	<delete id="delAuthorizeForRole" parameterType="Role" >
		update s_authorize
	    <set>
	      <if test="state != null" >state = #{state},</if>
	      <if test="updateUser != null" >update_user = #{updateUser},</if>
	      <if test="updateTime != null" >update_time = #{updateTime},</if>
	    </set>
	    where role_id = #{role_id}
	</delete>
	
	<select id="getRoleByLoginName" resultType="Role" parameterType="java.lang.String">
    	SELECT r.* FROM s_user u,r_user_role ur,s_role r  WHERE [s_user.u,r_user_role.ur,s_role.r] and u.user_id=ur.user_id AND ur.role_id=r.role_id 
			AND u.login_name=#{login_name} AND r.state=1 ORDER BY r.role_id
    </select>

    <select id="getRoleByDeptId" parameterType="java.lang.String" resultType="Role" >
        select * from s_role where belong_dept_id = #{dept_id} and state=1 and is_admin=1 and [s_role.s_role] and [islessee]
    </select>
    
    <select id="queryByLesseeId" parameterType="java.lang.String" resultType="Role" >
        select * from s_role where belong_lessee_id = #{lesseeid} and state=1 and is_admin=0
    </select>

</mapper>